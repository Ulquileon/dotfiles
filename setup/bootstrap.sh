#!/usr/bin/env bash
set -euo pipefail

# ‚îÄ‚îÄ Params override possibles via env ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
GIT_HOST_ALIAS="${GIT_HOST_ALIAS:-github.com-personal}"
GIT_USER="${GIT_USER:-Ulquileon}"
DOTFILES_REPO="${DOTFILES_REPO:-dotfiles}"
DOTFILES_DIR="${DOTFILES_DIR:-$HOME/.files}"

echo "üöÄ Bootstrap: $GIT_HOST_ALIAS:$GIT_USER/$DOTFILES_REPO ‚Üí $DOTFILES_DIR"

# 1) Git minimal si absent
if ! command -v git >/dev/null 2>&1; then
  echo "üì¶ Installation de git‚Ä¶"
  sudo apt update -y && sudo apt install -y git
fi

# 2) Clonage des dotfiles s'ils n'existent pas d√©j√†
if [ ! -d "$DOTFILES_DIR/.git" ]; then
  echo "üîê Test SSH ($GIT_HOST_ALIAS)‚Ä¶"
  # n'√©choue pas le script si l'agent n'a pas de cl√©, on tente quand m√™me
  ssh -T "git@$GIT_HOST_ALIAS" || true

  echo "üì• Clone du repo‚Ä¶"
  git clone "git@$GIT_HOST_ALIAS:$GIT_USER/$DOTFILES_REPO.git" "$DOTFILES_DIR"
else
  echo "‚úÖ Repo d√©j√† pr√©sent: $DOTFILES_DIR"
fi

# 3) Lancer l'install compl√®te
exec bash "$DOTFILES_DIR/setup/install.sh"
